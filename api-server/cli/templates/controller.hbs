/**
 * {{name}} Controller
 */
import { Inject } from "@/core/container";
import { Body, Controller, Delete, Get, Params, Post, Put, Query } from "@/core/decorator";
import { Response } from "@/core/responce";
{{#if hasService}}import { {{firstUppercase serviceName}} } from "@/models/entity/{{serviceName}}";
import { {{firstUppercase serviceName}}Service } from "../service/{{name}}";{{/if}}

@Controller('/{{camelToUnderline name}}', { skipPerm: true })
export class {{firstUppercase name}}Controller {
{{#if hasService}}
  @Inject()
  protected {{lowercase serviceName}}Service: {{firstUppercase serviceName}}Service

  @Get('')
  public async list(@Query() { pageNum = 1, pageSize = 10 }: { pageSize: number, pageNum: number; }) {
    const listData = await this.{{lowercase serviceName}}Service.getPageList({ pageNum, pageSize })
    return Response.success(listData)
  }

  @Post('')
  public add(@Body() params: Partial<{{name}}>) {
    if (this.{{lowercase serviceName}}Service.create(params)) {
      return Response.success(true)
    }
    return Response.error('error')
  }

  @Put('/:id')
  public update(@Params('id') id: number, @Body() params: Partial<{{name}}>) {
    if (this.{{lowercase serviceName}}Service.update(id, params)) {
      return Response.success(true, '更新成功')
    }
    return Response.error('更新失败，请重试')
  }

  @Delete('/:id')
  public delete(@Params('id') id: number) {
    if (this.{{lowercase serviceName}}Service.delete(id)) {
      return Response.success(true, '删除成功')
    }
    return Response.error('删除失败，请重试')
  }
{{else}}
  @Get('')
  public async list(@Query() { pageNum = 1, pageSize = 10 }: { pageSize: number, pageNum: number; }) {
    return Response.success({ pageNum, pageSize })
  }
{{/if}}
}