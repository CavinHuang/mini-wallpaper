import axios from 'axios'
import { computed } from 'vue'
import { ElMessage, UploadRequestOptions } from 'element-plus'

import { useQiNIu } from '@/hooks'
import { useAsyncState } from '@vueuse/core'

/**
 * Êñá‰ª∂‰∏ä‰º†Ëá™Ë°åÂ§ÑÁêÜ‰∏ä‰º†
 * @param upload
 */
export async function schemaRequest(upload: UploadRequestOptions) {
  const { state, execute } = useAsyncState(
    useQiNIu(),
    {
      uploadUrl: computed<string>(() => ''),
      qiniuHttpHost: computed<string>(() => ''),
      getKey: () => '',
      token: '',
      uploadPath: computed<string>(() => '')
    },
    { immediate: false }
  )
  await execute()
  // ÂàõÂª∫FormDataÂØπË±° Ê∑ªÂä†Áõ∏ÂÖ≥‰∏ä‰º†ÂèÇÊï∞
  const formData = new FormData()
  // Êñá‰ª∂ÂØπË±°
  formData.append('file', upload.file)
  // key Êñá‰ª∂ÂêçÂ§ÑÁêÜ images/Êó∂Èó¥Êà≥_ÈöèÊú∫Â≠óÁ¨¶‰∏≤.Êñá‰ª∂ÂêéÁºÄ
  formData.append('key', state.value.getKey())
  // token
  formData.append('token', state.value.token!)

  // ‰∏ä‰º†Êñá‰ª∂
  // onUploadProgress Êü•ÁúãaxiosÊñáÊ°£ https://github.com/axios/axios
  axios
    .post(state.value.uploadUrl.value!, formData, {
      onUploadProgress: (event) => {
        // ÁõëÂê¨‰∏ä‰º†ËøõÂ∫¶
        event.percent = (event.loaded / event.total) * 100
        upload.onProgress(event)
      }
    })
    .then((response) => {
      const res = response.data
      if (response.status === 200) {
        // Ë∞ÉÁî®ÁªÑ‰ª∂‰∏ä‰º†ÊàêÂäüÊñπÊ≥ï
        upload.onSuccess(res)
        // ËΩÆÊí≠Âõæ‰∏ä‰º†ÊàêÂäü ËøôÈáåÂÅöÁõ∏ÂÖ≥ÈÄªËæëthis.$message.success('‰∏ä‰º†ÊàêÂäü')
      }
    })
    .catch((err) => {
      console.log('üöÄ ~ file: schemaUpload.ts ~ line 54 ~ schemaRequest ~ err', err)
      // Ë∞ÉÁî®ÁªÑ‰ª∂‰∏ä‰º†Â§±Ë¥•ÊñπÊ≥ï
      upload.onError(err)
      ElMessage.error('‰∏ä‰º†Â§±Ë¥•,' + err)
    })
}
